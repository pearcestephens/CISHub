CREATE TABLE `transfer_allocations` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `public_id` varchar(40) DEFAULT NULL,
  `execution_id` int(10) unsigned NOT NULL,
  `product_id` varchar(50) NOT NULL,
  `allocated_quantity` int(11) NOT NULL,
  `calculation_data` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`calculation_data`)),
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `transfer_id` bigint(20) unsigned DEFAULT NULL,
  `item_id` bigint(20) unsigned DEFAULT NULL,
  `qty` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_ta_pub` (`public_id`),
  KEY `fk_execution` (`execution_id`),
  KEY `idx_product` (`product_id`),
  KEY `idx_allocation_product_date` (`product_id`,`created_at`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `transfer_audit_log` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `entity_type` enum('transfer','po') NOT NULL DEFAULT 'transfer',
  `entity_pk` int(11) DEFAULT NULL,
  `transfer_pk` int(11) DEFAULT NULL,
  `transfer_id` varchar(100) DEFAULT NULL COMMENT 'Internal transfer ID',
  `vend_consignment_id` varchar(100) DEFAULT NULL COMMENT 'Vend consignment ID',
  `vend_transfer_id` char(36) DEFAULT NULL,
  `action` varchar(100) NOT NULL COMMENT 'Action performed',
  `status` varchar(50) NOT NULL COMMENT 'Action status',
  `actor_type` enum('system','user','api','cron','webhook') NOT NULL,
  `actor_id` varchar(100) DEFAULT NULL COMMENT 'User ID or system identifier',
  `outlet_from` varchar(100) DEFAULT NULL,
  `outlet_to` varchar(100) DEFAULT NULL,
  `data_before` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'State before action' CHECK (json_valid(`data_before`)),
  `data_after` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'State after action' CHECK (json_valid(`data_after`)),
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'Additional context data' CHECK (json_valid(`metadata`)),
  `error_details` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'Error information if failed' CHECK (json_valid(`error_details`)),
  `processing_time_ms` int(10) unsigned DEFAULT NULL,
  `api_response` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'External API response' CHECK (json_valid(`api_response`)),
  `session_id` varchar(255) DEFAULT NULL,
  `ip_address` varchar(45) DEFAULT NULL,
  `user_agent` text DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `idx_transfer_id` (`transfer_id`),
  KEY `idx_vend_consignment` (`vend_consignment_id`),
  KEY `idx_action_status` (`action`,`status`),
  KEY `idx_actor` (`actor_type`,`actor_id`),
  KEY `idx_outlet_from_to` (`outlet_from`,`outlet_to`),
  KEY `idx_created_at` (`created_at`),
  KEY `idx_error_tracking` (`status`,`created_at`) COMMENT 'For error rate monitoring',
  KEY `idx_transfer_pk` (`transfer_pk`),
  KEY `idx_vend_transfer` (`vend_transfer_id`),
  KEY `idx_entity` (`entity_type`,`entity_pk`),
  KEY `idx_audit_errors` (`status`,`created_at`)
) ENGINE=InnoDB AUTO_INCREMENT=183 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Comprehensive audit trail for all transfer operations';

CREATE TABLE `transfer_carrier_orders` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Row ID',
  `transfer_id` int(11) NOT NULL COMMENT 'FK to transfers.id',
  `carrier` varchar(50) NOT NULL COMMENT 'Carrier code e.g., NZ_POST, GSS',
  `order_id` varchar(100) DEFAULT NULL COMMENT 'Carrier order identifier (string, may be numeric)',
  `order_number` varchar(100) NOT NULL COMMENT 'Our canonical order number (e.g., TR-1234)',
  `payload` longtext DEFAULT NULL COMMENT 'Raw API response snapshot (JSON)',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_transfer_carrier` (`transfer_id`,`carrier`),
  KEY `idx_order_id` (`order_id`),
  KEY `idx_order_number` (`order_number`),
  CONSTRAINT `fk_tco_transfer` FOREIGN KEY (`transfer_id`) REFERENCES `transfers` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='External carrier orders per transfer (NZ Post, GSS, etc).';

CREATE TABLE `transfer_configurations` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `description` text DEFAULT NULL,
  `allocation_method` tinyint(1) NOT NULL DEFAULT 1,
  `power_factor` decimal(4,2) NOT NULL DEFAULT 2.00,
  `min_allocation_pct` decimal(5,2) NOT NULL DEFAULT 5.00,
  `max_allocation_pct` decimal(5,2) NOT NULL DEFAULT 50.00,
  `rounding_method` tinyint(1) NOT NULL DEFAULT 0,
  `is_preset` tinyint(1) NOT NULL DEFAULT 0,
  `is_active` tinyint(1) NOT NULL DEFAULT 1,
  `enable_safety_checks` tinyint(1) NOT NULL DEFAULT 1,
  `enable_logging` tinyint(1) NOT NULL DEFAULT 1,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `created_by` varchar(50) DEFAULT NULL,
  `updated_by` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_name` (`name`),
  KEY `idx_preset` (`is_preset`),
  KEY `idx_active` (`is_active`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `transfer_discrepancies` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `transfer_id` int(11) NOT NULL,
  `item_id` int(11) DEFAULT NULL,
  `product_id` varchar(64) NOT NULL,
  `type` enum('missing','damaged','lost','mistake') NOT NULL,
  `qty` int(11) NOT NULL,
  `notes` text DEFAULT NULL,
  `status` enum('open','reconciled','void') NOT NULL DEFAULT 'open',
  `created_by` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NULL DEFAULT NULL ON UPDATE current_timestamp(),
  `deleted_at` timestamp NULL DEFAULT NULL,
  `deleted_by` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_td_transfer` (`transfer_id`),
  KEY `idx_td_item` (`item_id`),
  KEY `idx_td_status` (`status`),
  KEY `idx_td_product` (`product_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `transfer_executions` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `transfer_id` bigint(20) unsigned DEFAULT NULL,
  `public_id` varchar(32) DEFAULT NULL,
  `alias_code` varchar(24) DEFAULT NULL,
  `config_id` int(10) unsigned NOT NULL,
  `simulation_mode` tinyint(1) NOT NULL DEFAULT 1,
  `status` enum('pending','running','completed','failed','cancelled') NOT NULL DEFAULT 'pending',
  `total_items_processed` int(10) unsigned NOT NULL DEFAULT 0,
  `execution_time_seconds` decimal(10,3) DEFAULT NULL,
  `error_message` text DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `completed_at` timestamp NULL DEFAULT NULL,
  `updated_at` datetime NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `executed_by` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_tx_pub` (`public_id`),
  UNIQUE KEY `uniq_tx_alias` (`alias_code`),
  KEY `fk_config` (`config_id`),
  KEY `idx_status` (`status`),
  KEY `idx_created` (`created_at`),
  KEY `idx_tx_transfer` (`transfer_id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `transfer_items` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Transfer line ID',
  `transfer_id` int(11) NOT NULL COMMENT 'FK to transfers.id',
  `product_id` varchar(45) NOT NULL COMMENT 'Vend product UUID',
  `qty_requested` int(11) NOT NULL COMMENT 'Requested quantity',
  `qty_sent_total` int(11) DEFAULT 0 COMMENT 'Cumulative sent qty (across shipments)',
  `qty_received_total` int(11) DEFAULT 0 COMMENT 'Cumulative received qty (across shipments)',
  `confirmation_status` enum('pending','accepted','declined') NOT NULL DEFAULT 'pending' COMMENT 'Staff multi-store confirmation',
  `confirmed_by_store` int(11) DEFAULT NULL COMMENT 'UserID from supplying store who confirmed',
  `created_at` datetime DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp() COMMENT 'Last time this transfer item was updated',
  `deleted_by` int(11) DEFAULT NULL COMMENT 'User ID of staff who soft-deleted this transfer item',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'When the transfer item was soft deleted',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_item_transfer_product` (`transfer_id`,`product_id`),
  KEY `idx_item_transfer` (`transfer_id`),
  KEY `idx_item_product` (`product_id`),
  KEY `idx_item_confirm` (`confirmation_status`),
  KEY `idx_items_outstanding` (`transfer_id`,`confirmation_status`),
  CONSTRAINT `fk_items_transfer` FOREIGN KEY (`transfer_id`) REFERENCES `transfers` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `chk_item_qtys_nonneg` CHECK (`qty_requested` >= 0 and `qty_sent_total` >= 0 and `qty_received_total` >= 0),
  CONSTRAINT `chk_item_qtys_bounds` CHECK (`qty_sent_total` <= `qty_requested` and `qty_received_total` <= `qty_sent_total`)
) ENGINE=InnoDB AUTO_INCREMENT=245 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Product lines for a transfer; tracks requested/sent/received and store confirmations.';

CREATE TABLE `transfer_logs` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'Log entry ID',
  `transfer_id` int(11) DEFAULT NULL COMMENT 'FK to transfers.id (optional, event scope)',
  `shipment_id` int(11) DEFAULT NULL COMMENT 'FK to transfer_shipments.id (optional)',
  `item_id` int(11) DEFAULT NULL COMMENT 'FK to transfer_items.id (optional)',
  `parcel_id` int(11) DEFAULT NULL COMMENT 'FK to transfer_parcels.id (optional)',
  `staff_transfer_id` int(10) unsigned DEFAULT NULL COMMENT 'FK to staff_transfers.id (optional, unsigned)',
  `event_type` varchar(100) NOT NULL COMMENT 'CREATE|STATUS_CHANGE|ADD_ITEM|PACKED|SENT|RECEIVED|CANCELLED|NOTE|WEBHOOK|... ',
  `event_data` longtext DEFAULT NULL COMMENT 'JSON payload (old/new values, raw webhook/API bodies)',
  `actor_user_id` int(11) DEFAULT NULL COMMENT 'User performing action (if any)',
  `actor_role` varchar(50) DEFAULT NULL COMMENT 'Role/group (optional)',
  `severity` enum('info','warning','error','critical') DEFAULT 'info',
  `source_system` varchar(50) NOT NULL DEFAULT 'CIS' COMMENT 'CIS|VendWebhook|API|TaskRunner etc.',
  `trace_id` varchar(64) DEFAULT NULL COMMENT 'Correlation ID for grouped events',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `customer_id` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_logs_transfer` (`transfer_id`,`created_at`),
  KEY `idx_logs_shipment` (`shipment_id`,`created_at`),
  KEY `idx_logs_item` (`item_id`,`created_at`),
  KEY `idx_logs_parcel` (`parcel_id`,`created_at`),
  KEY `idx_logs_staff` (`staff_transfer_id`,`created_at`),
  KEY `idx_logs_event` (`event_type`,`created_at`),
  KEY `idx_logs_source` (`source_system`,`created_at`),
  KEY `idx_logs_transfer_created` (`transfer_id`,`created_at`),
  KEY `idx_logs_customer` (`customer_id`),
  KEY `idx_transfer_time` (`transfer_id`,`created_at`),
  CONSTRAINT `fk_logs_customer` FOREIGN KEY (`customer_id`) REFERENCES `vend_customers` (`id`),
  CONSTRAINT `fk_logs_item` FOREIGN KEY (`item_id`) REFERENCES `transfer_items` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `fk_logs_parcel` FOREIGN KEY (`parcel_id`) REFERENCES `transfer_parcels` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `fk_logs_shipment` FOREIGN KEY (`shipment_id`) REFERENCES `transfer_shipments` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `fk_logs_staff` FOREIGN KEY (`staff_transfer_id`) REFERENCES `staff_transfers` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `fk_logs_transfer` FOREIGN KEY (`transfer_id`) REFERENCES `transfers` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `chk_logs_event_json` CHECK (`event_data` is null or json_valid(`event_data`))
) ENGINE=InnoDB AUTO_INCREMENT=220 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Immutable audit log. One row per event; JSON payloads, actor, and origin.';

CREATE TABLE `transfer_notes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `transfer_id` int(11) NOT NULL COMMENT 'FK to transfers.id',
  `note_text` mediumtext NOT NULL COMMENT 'Staff-entered note about the transfer',
  `created_by` int(11) NOT NULL COMMENT 'User ID of staff who added the note',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'When the note was added',
  PRIMARY KEY (`id`),
  KEY `transfer_id` (`transfer_id`),
  CONSTRAINT `transfer_notes_ibfk_1` FOREIGN KEY (`transfer_id`) REFERENCES `transfers` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='History of notes attached to transfers (umbrella-level context).';

CREATE TABLE `transfer_parcel_items` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Parcel item row ID',
  `parcel_id` int(11) NOT NULL COMMENT 'FK to transfer_parcels.id',
  `item_id` int(11) NOT NULL COMMENT 'FK to transfer_items.id',
  `qty_received` int(11) NOT NULL COMMENT 'Qty received in this specific parcel',
  `locked_at` timestamp NULL DEFAULT current_timestamp() COMMENT 'Locked upon insert; row is not editable afterwards',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `qty` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_parcel_item` (`parcel_id`,`item_id`),
  KEY `idx_tpi_parcel` (`parcel_id`),
  KEY `idx_tpi_item` (`item_id`),
  KEY `idx_parcel_id` (`parcel_id`),
  KEY `idx_item_id` (`item_id`),
  CONSTRAINT `fk_tpi_item` FOREIGN KEY (`item_id`) REFERENCES `transfer_items` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_tpi_parcel` FOREIGN KEY (`parcel_id`) REFERENCES `transfer_parcels` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Per-parcel receiving granularity to allow box-by-box acceptance.';

CREATE TABLE `transfer_parcels` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Parcel ID',
  `shipment_id` int(11) NOT NULL COMMENT 'FK to transfer_shipments.id',
  `box_number` int(11) NOT NULL COMMENT '1..N within a shipment',
  `tracking_number` varchar(100) DEFAULT NULL,
  `courier` varchar(50) DEFAULT NULL,
  `weight_kg` decimal(10,2) DEFAULT NULL,
  `label_url` varchar(255) DEFAULT NULL,
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp() COMMENT 'Last time this parcel was updated',
  `deleted_by` int(11) DEFAULT NULL COMMENT 'User ID of staff who soft-deleted this parcel',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'When the parcel was soft deleted',
  `status` enum('in_transit','received','missing','damaged','cancelled') NOT NULL DEFAULT 'in_transit' COMMENT 'Parcel-level lifecycle',
  `notes` mediumtext DEFAULT NULL COMMENT 'Parcel-specific notes (damage, exception, missing context)',
  `received_at` timestamp NULL DEFAULT NULL,
  `created_at` datetime NOT NULL DEFAULT current_timestamp(),
  `parcel_number` int(11) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_parcel_boxnum` (`shipment_id`,`box_number`),
  KEY `idx_parcel_shipment` (`shipment_id`),
  KEY `idx_parcel_tracking` (`tracking_number`),
  KEY `idx_shipment_id` (`shipment_id`),
  KEY `idx_tracking` (`tracking_number`),
  CONSTRAINT `fk_parcels_shipment` FOREIGN KEY (`shipment_id`) REFERENCES `transfer_shipments` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Courier parcel metadata for a shipment (tracking, label, weight).';

CREATE TABLE `transfer_queue` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `created_at` datetime NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `transfer_queue_metrics` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `metric_type` varchar(100) NOT NULL COMMENT 'Type of metric collected',
  `queue_name` varchar(255) NOT NULL DEFAULT 'default',
  `job_type` varchar(100) DEFAULT NULL,
  `value` decimal(15,4) NOT NULL COMMENT 'Metric value',
  `unit` varchar(50) NOT NULL COMMENT 'Metric unit (ms, count, percent, etc)',
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'Additional metric context' CHECK (json_valid(`metadata`)),
  `outlet_from` varchar(50) DEFAULT NULL,
  `outlet_to` varchar(50) DEFAULT NULL,
  `worker_id` varchar(255) DEFAULT NULL,
  `recorded_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `idx_metric_type_recorded` (`metric_type`,`recorded_at`),
  KEY `idx_queue_job_type` (`queue_name`,`job_type`),
  KEY `idx_outlet_metrics` (`outlet_from`,`outlet_to`,`recorded_at`),
  KEY `idx_worker_metrics` (`worker_id`,`recorded_at`),
  KEY `idx_cleanup_old_metrics` (`recorded_at`) COMMENT 'For metric retention cleanup'
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Performance and operational metrics for transfer queue system';

CREATE TABLE `transfer_shipment_items` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Shipment line ID',
  `shipment_id` int(11) NOT NULL COMMENT 'FK to transfer_shipments.id',
  `item_id` int(11) NOT NULL COMMENT 'FK to transfer_items.id',
  `qty_sent` int(11) NOT NULL COMMENT 'Qty in this shipment wave',
  `qty_received` int(11) NOT NULL DEFAULT 0 COMMENT 'Qty received for this line+wave',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_shipment_item` (`shipment_id`,`item_id`),
  KEY `idx_tsi_shipment` (`shipment_id`),
  KEY `idx_tsi_item` (`item_id`),
  CONSTRAINT `fk_tsi_item` FOREIGN KEY (`item_id`) REFERENCES `transfer_items` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_tsi_shipment` FOREIGN KEY (`shipment_id`) REFERENCES `transfer_shipments` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `chk_tsi_qtys_nonneg` CHECK (`qty_sent` >= 0 and `qty_received` >= 0),
  CONSTRAINT `chk_tsi_qtys_bounds` CHECK (`qty_received` <= `qty_sent`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Items included in a particular shipment wave; validates sent/received bounds.';

CREATE TABLE `transfer_shipment_notes` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Note ID',
  `shipment_id` int(11) NOT NULL COMMENT 'FK to transfer_shipments.id',
  `note_text` mediumtext NOT NULL COMMENT 'The note text entered by staff',
  `created_by` int(11) NOT NULL COMMENT 'User ID of the staff who wrote the note',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'When the note was written',
  PRIMARY KEY (`id`),
  KEY `idx_shipment` (`shipment_id`),
  CONSTRAINT `fk_shipment_notes` FOREIGN KEY (`shipment_id`) REFERENCES `transfer_shipments` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Free-form history notes for shipments; multiple entries allowed per shipment';

CREATE TABLE `transfer_shipments` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Partial shipment ID',
  `transfer_id` int(11) NOT NULL COMMENT 'FK to transfers.id',
  `delivery_mode` enum('courier','internal_drive','pickup') NOT NULL DEFAULT 'courier' COMMENT 'How it moves',
  `status` enum('packed','in_transit','partial','received','cancelled') NOT NULL DEFAULT 'packed' COMMENT 'Shipment lifecycle incl. partial support',
  `packed_at` timestamp NULL DEFAULT NULL,
  `packed_by` int(11) DEFAULT NULL,
  `received_at` timestamp NULL DEFAULT NULL,
  `created_at` datetime NOT NULL DEFAULT current_timestamp(),
  `received_by` int(11) DEFAULT NULL,
  `driver_staff_id` int(11) DEFAULT NULL COMMENT 'If internal_drive, who drove it',
  `nicotine_in_shipment` tinyint(1) NOT NULL DEFAULT 0 COMMENT 'Regulatory flag: this shipment contains nicotine',
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp() COMMENT 'Last time this shipment was updated',
  `deleted_by` int(11) DEFAULT NULL COMMENT 'User ID of staff who soft-deleted this shipment',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'When the shipment was soft deleted',
  `carrier_name` varchar(120) DEFAULT NULL,
  `tracking_number` varchar(120) DEFAULT NULL,
  `tracking_url` varchar(300) DEFAULT NULL,
  `dispatched_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_shipments_transfer` (`transfer_id`),
  KEY `idx_shipments_status` (`status`),
  KEY `idx_shipments_mode` (`delivery_mode`),
  KEY `idx_shipments_packed_at` (`packed_at`),
  KEY `idx_shipments_received_at` (`received_at`),
  KEY `idx_transfer_id` (`transfer_id`),
  CONSTRAINT `fk_shipments_transfer` FOREIGN KEY (`transfer_id`) REFERENCES `transfers` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Partial shipment waves for a transfer. Supports courier vs internal drive vs pickup.';

CREATE TABLE `transfer_validation_cache` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `cache_key` varchar(255) NOT NULL COMMENT 'Hash of validation parameters',
  `transfer_data` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'Original transfer request data' CHECK (json_valid(`transfer_data`)),
  `validation_result` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'Validation result with details' CHECK (json_valid(`validation_result`)),
  `status` enum('valid','invalid','error') NOT NULL,
  `errors` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'Validation errors if any' CHECK (json_valid(`errors`)),
  `warnings` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'Validation warnings' CHECK (json_valid(`warnings`)),
  `safeguards_applied` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'Applied business safeguards' CHECK (json_valid(`safeguards_applied`)),
  `economic_analysis` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'Cost analysis results' CHECK (json_valid(`economic_analysis`)),
  `outlet_from` varchar(50) NOT NULL,
  `outlet_to` varchar(50) NOT NULL,
  `total_items` int(10) unsigned NOT NULL DEFAULT 0,
  `total_value` decimal(12,2) NOT NULL DEFAULT 0.00,
  `courier_cost` decimal(10,2) DEFAULT NULL,
  `requires_approval` tinyint(1) NOT NULL DEFAULT 0,
  `approval_reasons` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`approval_reasons`)),
  `expires_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp() COMMENT 'Cache expiration time',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_cache_key` (`cache_key`),
  KEY `idx_outlet_from_to` (`outlet_from`,`outlet_to`),
  KEY `idx_status_expires` (`status`,`expires_at`),
  KEY `idx_requires_approval` (`requires_approval`,`created_at`),
  KEY `idx_cleanup_expired` (`expires_at`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Cached validation results for transfer requests';

CREATE TABLE `transfers` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'CIS transfer ID (primary)',
  `public_id` varchar(40) NOT NULL,
  `vend_transfer_id` char(36) DEFAULT NULL COMMENT 'Vend/Lightspeed consignment UUID (unique when present)',
  `vend_resource` enum('consignment','purchase_order') DEFAULT 'consignment',
  `vend_number` varchar(64) DEFAULT NULL,
  `vend_url` varchar(255) DEFAULT NULL,
  `type` enum('stock','juice','staff') NOT NULL COMMENT 'Transfer type',
  `status` enum('draft','open','sent','partial','received','cancelled') NOT NULL DEFAULT 'draft' COMMENT 'Lifecycle status aligned to Vend',
  `outlet_from` varchar(100) NOT NULL COMMENT 'Source outlet UUID (Vend)',
  `outlet_to` varchar(100) NOT NULL COMMENT 'Destination outlet UUID (Vend)',
  `created_by` int(11) NOT NULL COMMENT 'CIS user who created this transfer',
  `staff_transfer_id` int(10) unsigned DEFAULT NULL COMMENT 'Link to existing staff_transfers.id (unsigned)',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `deleted_by` int(11) DEFAULT NULL COMMENT 'User ID of staff who soft-deleted this transfer',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'When the transfer was soft deleted',
  `customer_id` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_transfers_public_id` (`public_id`),
  UNIQUE KEY `uniq_transfers_vend_uuid` (`vend_transfer_id`),
  KEY `idx_transfers_status` (`status`),
  KEY `idx_transfers_type_status` (`type`,`status`),
  KEY `idx_transfers_from_status_date` (`outlet_from`,`status`,`created_at`),
  KEY `idx_transfers_to_status_date` (`outlet_to`,`status`,`created_at`),
  KEY `idx_transfers_staff` (`staff_transfer_id`),
  KEY `idx_transfers_created` (`created_at`),
  KEY `idx_transfers_type_created` (`type`,`created_at`),
  KEY `idx_transfers_to_created` (`outlet_to`,`created_at`),
  KEY `idx_transfers_vend` (`vend_resource`,`vend_transfer_id`),
  KEY `idx_transfers_customer` (`customer_id`),
  CONSTRAINT `fk_transfers_customer` FOREIGN KEY (`customer_id`) REFERENCES `vend_customers` (`id`),
  CONSTRAINT `fk_transfers_staff` FOREIGN KEY (`staff_transfer_id`) REFERENCES `staff_transfers` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `chk_transfers_outlets_diff` CHECK (`outlet_from` <> `outlet_to`)
) ENGINE=InnoDB AUTO_INCREMENT=8172 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Atomic outlet→outlet transfer. Single Vend consignment with strict lifecycle & Vend UUID.';

CREATE TABLE `stock_transfers` (
  `transfer_id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique identifier for each stock transfer record.',
  `date_created` timestamp NOT NULL DEFAULT current_timestamp(),
  `status` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates the current progress stage of a stock transfer between outlets.',
  `micro_status` varchar(50) DEFAULT NULL COMMENT 'Micro-status for packing UI (e.g., packing, finished, delayed)',
  `receive_confidence` tinyint(4) DEFAULT NULL,
  `receive_quality_notes` varchar(255) DEFAULT NULL,
  `transfer_created_by_user` int(11) NOT NULL COMMENT 'The user ID of the person who initiated the stock transfer.',
  `transfer_completed_by_user` int(11) DEFAULT NULL COMMENT 'The user ID of the person who finalized the stock transfer.',
  `transfer_completed` timestamp NULL DEFAULT NULL COMMENT 'The date and time when the stock transfer process was fully completed.',
  `outlet_from` varchar(100) NOT NULL COMMENT 'Identifies the originating store location for a stock transfer.',
  `outlet_to` varchar(100) NOT NULL COMMENT 'The destination outlet for the stock transfer within the company.',
  `transfer_json` mediumtext DEFAULT NULL COMMENT 'Stores detailed information about products and quantities involved in a stock transfer.',
  `transfer_json_destination` mediumtext DEFAULT NULL COMMENT 'Stores detailed information about products and quantities for the transfer''s destination outlet.',
  `receive_summary_json` mediumtext DEFAULT NULL,
  `recieve_completed` timestamp NULL DEFAULT NULL COMMENT 'Timestamp when the stock transfer was fully received at the destination outlet.',
  `transfer_notes` mediumtext DEFAULT NULL COMMENT 'Notes or comments about the stock transfer process, including any discrepancies or observations.',
  `completed_notes` mediumtext DEFAULT NULL COMMENT 'Notes on discrepancies or confirmations about items received during stock transfers.',
  `require_source_stocktake` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if a stock count is needed at the source location before transfer.',
  `transfer_received_by_user` int(11) DEFAULT NULL COMMENT 'The staff member who confirmed receipt of the stock transfer.',
  `tracking_number` mediumtext DEFAULT NULL COMMENT 'This column records the method or person responsible for transporting stock between outlets.',
  `transfer_partially_received_timestamp` timestamp NULL DEFAULT NULL COMMENT 'Timestamp when a stock transfer was partially received at the destination outlet.',
  `transfer_partially_received_by_user` int(11) DEFAULT NULL COMMENT 'The user ID of the person who confirmed partial receipt of a stock transfer.',
  `source_module` varchar(64) NOT NULL DEFAULT 'automatic_stock_transfers_v4',
  `delivery_mode` varchar(64) DEFAULT NULL,
  `deleted_at` datetime DEFAULT NULL COMMENT 'Soft delete timestamp; NULL = active. Set only when transfer is soft-deleted.',
  `ai_confidence_score` decimal(5,2) DEFAULT NULL COMMENT 'AI prediction confidence 0-100',
  `urgency_score` decimal(5,2) DEFAULT NULL COMMENT 'Calculated urgency 0-100',
  `automation_triggered` tinyint(1) DEFAULT 0 COMMENT 'Was this transfer AI-generated?',
  `business_impact_score` decimal(10,2) DEFAULT NULL COMMENT 'Expected financial impact',
  `risk_assessment` enum('low','medium','high','critical') DEFAULT NULL COMMENT 'AI risk assessment',
  `predicted_success_rate` decimal(5,2) DEFAULT NULL COMMENT 'ML predicted success rate',
  `seasonal_factor` decimal(5,2) DEFAULT NULL COMMENT 'Seasonal demand multiplier',
  `ml_recommendations` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'AI suggestions and insights' CHECK (json_valid(`ml_recommendations`)),
  `run_id` varchar(100) DEFAULT NULL COMMENT 'MVC system run identifier',
  `priority` int(11) DEFAULT 50 COMMENT 'Transfer priority (1-100)',
  `product_count` int(11) DEFAULT 0 COMMENT 'Number of products in this transfer',
  `total_quantity` int(11) DEFAULT 0 COMMENT 'Total quantity being transferred',
  `created_by_system` varchar(100) DEFAULT 'automatic_stock_transfers_v4' COMMENT 'System that created this transfer',
  `transfer_type` enum('manual','auto_seed','rebalance','emergency') DEFAULT 'manual',
  `algorithm_version` varchar(20) DEFAULT NULL,
  `total_items` int(11) DEFAULT 0,
  `total_weight_grams` int(11) DEFAULT NULL,
  `shipping_cost` decimal(10,2) DEFAULT NULL,
  `notes` text DEFAULT NULL,
  `synced_to_vend` tinyint(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`transfer_id`),
  KEY `ix_st_date` (`date_created`),
  KEY `ix_st_fromdate` (`outlet_from`,`date_created`),
  KEY `ix_st_todate` (`outlet_to`,`date_created`),
  KEY `idx_urgency` (`urgency_score`),
  KEY `idx_automation` (`automation_triggered`),
  KEY `idx_risk` (`risk_assessment`),
  KEY `idx_transfer_date` (`date_created`),
  KEY `idx_transfer_status` (`status`,`micro_status`),
  KEY `idx_transfer_outlets` (`outlet_from`,`outlet_to`),
  KEY `idx_run_id` (`run_id`),
  KEY `idx_priority` (`priority`),
  KEY `idx_status_priority` (`status`,`priority`),
  KEY `idx_automation_triggered` (`automation_triggered`),
  KEY `idx_transfer_type_status` (`transfer_type`,`status`),
  KEY `idx_algorithm_version` (`algorithm_version`),
  KEY `idx_status` (`status`),
  KEY `idx_micro_status` (`micro_status`),
  KEY `idx_outlet_from` (`outlet_from`),
  KEY `idx_outlet_to` (`outlet_to`)
) ENGINE=InnoDB AUTO_INCREMENT=13407 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table records the movement of stock items between different outlets, used by the business to track inventory transfers and ensure accurate stock levels across locations.  \nTags: stock transfer report, inventory movement, outlet stock levels, transfer status, completed transfers, pending transfers, transfer history, inter-outlet transfers, stock reconciliation.';

CREATE TABLE `stock_products_to_transfer` (
  `primary_key` int(11) NOT NULL AUTO_INCREMENT,
  `transfer_id` int(11) NOT NULL COMMENT 'Unique identifier for each product transfer operation.',
  `product_id` varchar(45) NOT NULL COMMENT 'Unique identifier for the product being transferred between locations.',
  `donor_outlet_id` varchar(100) DEFAULT NULL,
  `qty_to_transfer` int(11) NOT NULL COMMENT 'The number of units planned to be moved from one location to another.',
  `min_qty_to_remain` int(11) NOT NULL COMMENT 'Minimum quantity of a product that must remain in stock after a transfer.',
  `qty_transferred_at_source` int(11) DEFAULT NULL COMMENT 'The number of units moved from the original location during a stock transfer.',
  `qty_counted_at_destination` int(11) DEFAULT NULL COMMENT 'The actual quantity of products received and counted at the destination location.',
  `new_total_qty_in_stock` int(11) DEFAULT NULL COMMENT 'The updated stock quantity for a product after a transfer is completed.',
  `new_total_at_destination` int(11) DEFAULT NULL COMMENT 'The updated stock quantity at the destination after a product transfer.',
  `unexpected_product_added` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if an unplanned product was included in the transfer process.',
  `staff_added_product` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if a staff member manually added the product to the transfer list.',
  `validation_flags` longtext DEFAULT NULL CHECK (json_valid(`validation_flags`)),
  `validation_notes` varchar(255) DEFAULT NULL,
  `deleted_at` datetime DEFAULT NULL COMMENT 'Soft delete timestamp; NULL = active. Set once when soft-deleting.',
  `demand_forecast` int(11) DEFAULT NULL COMMENT 'AI predicted demand',
  `stockout_risk` decimal(5,2) DEFAULT NULL COMMENT 'Risk of stockout 0-100',
  `overstock_risk` decimal(5,2) DEFAULT NULL COMMENT 'Risk of overstock 0-100',
  `optimal_qty` int(11) DEFAULT NULL COMMENT 'AI calculated optimal quantity',
  `sales_velocity` decimal(10,2) DEFAULT NULL COMMENT 'Units per day average',
  `abc_classification` enum('A','B','C','D') DEFAULT NULL COMMENT 'Product importance ranking',
  `profit_impact` decimal(12,2) DEFAULT NULL COMMENT 'Expected profit impact',
  `ml_priority_score` decimal(5,2) DEFAULT NULL COMMENT 'AI calculated priority',
  `last_sale_date` date DEFAULT NULL COMMENT 'When this product last sold',
  `days_of_stock` int(11) DEFAULT NULL COMMENT 'Current stock will last X days',
  `pack_size` int(11) DEFAULT 1,
  `outer_multiple` int(11) DEFAULT NULL,
  `enforce_outer` tinyint(1) DEFAULT 0,
  `pack_compliance_status` enum('compliant','broken','forced') DEFAULT 'compliant',
  `weight_per_unit_grams` int(11) DEFAULT NULL,
  `total_weight_grams` int(11) DEFAULT NULL,
  `value_per_gram` decimal(10,4) DEFAULT NULL,
  `shipping_priority` tinyint(1) DEFAULT 0,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`primary_key`),
  UNIQUE KEY `uniq_transfer_product` (`transfer_id`,`product_id`),
  KEY `product_id` (`product_id`),
  KEY `idx_spt_transfer_active` (`transfer_id`,`deleted_at`),
  KEY `ix_spt_transfer` (`transfer_id`),
  KEY `ix_spt_product` (`product_id`),
  KEY `idx_stockout_risk` (`stockout_risk`),
  KEY `idx_abc_class` (`abc_classification`),
  KEY `idx_priority` (`ml_priority_score`),
  KEY `idx_products_transfer` (`transfer_id`,`product_id`),
  KEY `idx_transfer_product` (`transfer_id`,`product_id`),
  KEY `idx_ml_priority` (`ml_priority_score`),
  KEY `idx_pack_compliance` (`pack_compliance_status`,`enforce_outer`),
  KEY `idx_shipping_priority` (`shipping_priority`,`value_per_gram`),
  KEY `idx_weight_optimization` (`total_weight_grams`,`weight_per_unit_grams`),
  KEY `idx_transfer_id` (`transfer_id`),
  KEY `idx_product_id` (`product_id`),
  CONSTRAINT `stockTransferKey` FOREIGN KEY (`transfer_id`) REFERENCES `stock_transfers` (`transfer_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1329330 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table records details of products being transferred between locations, used to track inventory movement and ensure stock levels are maintained across outlets.  \nTags: inventory transfer report, stock movement, product transfer status, inter-outlet transfer, stock level adjustment, transfer discrepancies, destination stock count, source stock update.';
